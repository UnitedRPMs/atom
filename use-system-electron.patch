--- a/script/build
+++ b/script/build
@@ -4,7 +4,7 @@
 
 // Run bootstrap first to ensure all the dependencies used later in this script
 // are installed.
-require('./bootstrap')
+//require('./bootstrap')
 
 // Needed so we can require src/module-cache.coffee during generateModuleCache
 require('coffee-script/register')
@@ -33,7 +33,7 @@
 const generateAPIDocs = require('./lib/generate-api-docs')
 const generateMetadata = require('./lib/generate-metadata')
 const generateModuleCache = require('./lib/generate-module-cache')
-const installApplication = require('./lib/install-application')
+//const installApplication = require('./lib/install-application')
 const packageApplication = require('./lib/package-application')
 const prebuildLessCache = require('./lib/prebuild-less-cache')
 const transpileBabelPaths = require('./lib/transpile-babel-paths')
@@ -55,10 +55,10 @@
 generateModuleCache()
 prebuildLessCache()
 generateMetadata()
-generateAPIDocs()
-downloadChromedriver()
+//generateAPIDocs()
+//downloadChromedriver()
 dumpSymbols()
-  .then(packageApplication)
+//  .then(packageApplication)
   .then(packagedAppPath => {
     if (process.platform === 'darwin') {
       if (argv.codeSign) {
--- a/package.json
+++ b/package.json
@@ -12,7 +12,6 @@
     "url": "https://github.com/atom/atom/issues"
   },
   "license": "MIT",
-  "electronVersion": "0.37.8",
   "dependencies": {
     "async": "0.2.6",
     "atom-keymap": "6.3.2",
--- a/src/module-cache.coffee
+++ b/src/module-cache.coffee
@@ -194,8 +194,8 @@
   return
 
 registerBuiltins = (devMode) ->
-  if devMode or not cache.resourcePath.startsWith("#{process.resourcesPath}#{path.sep}")
-    fs = require 'fs-plus'
+  fs = require 'fs-plus'
+  if devMode or not cache.resourcePath.startsWith("/usr/<lib>/atom")
     atomJsPath = path.join(cache.resourcePath, 'exports', 'atom.js')
     cache.builtins.atom = atomJsPath if fs.isFileSync(atomJsPath)
   cache.builtins.atom ?= path.join(cache.resourcePath, 'exports', 'atom.js')
--- a/src/package-manager.coffee
+++ b/src/package-manager.coffee
@@ -521,7 +521,7 @@
 
   isBundledPackagePath: (packagePath) ->
     if @devMode
-      return false unless @resourcePath.startsWith("#{process.resourcesPath}#{path.sep}")
+      return false unless @resourcePath.startsWith("/usr/<lib>/atom")
 
     @resourcePathWithTrailingSlash ?= "#{@resourcePath}#{path.sep}"
     packagePath?.startsWith(@resourcePathWithTrailingSlash)
--- a/static/index.js
+++ b/static/index.js
@@ -29,7 +29,7 @@
         throw loadSettingsError
       }
 
-      var devMode = loadSettings.devMode || !loadSettings.resourcePath.startsWith(process.resourcesPath + path.sep)
+      var devMode = loadSettings.devMode || !loadSettings.resourcePath.startsWith('/usr/<lib>/atom')
 
       if (devMode) {
         setupDeprecatedPackages()
